{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"entry.js","sourcesContent":["#!/usr/bin/env node\n'use strict';\n\nimport fs from 'fs';\nimport _ from 'lodash';\nimport moment from 'moment';\nimport csv from 'fast-csv';\nimport pjson from '../package.json';\n\nlet inputFile = process.argv[2] || false;\nlet outputFile = process.argv[3] || false;\n\nif (inputFile) {\n  // Lookup version number\n  if (inputFile === '-v' || inputFile === '-version' || inputFile === '--version') {\n    process.stdout.write(pjson.name + ' @ v' + pjson.version);\n    process.exit();\n  }\n\n  if (!outputFile) {\n    let tempArray = inputFile.split('.');\n    tempArray.splice(-1, 0, 'happy');\n    outputFile = tempArray.join('.');\n  }\n\n  let ws = fs.createWriteStream(outputFile);\n\n  // Constructor function\n  // TODO: Rewrite using ES6 classes, just for fun\n  let HappyTime = function() {\n    this.input = [];\n  };\n\n  HappyTime.prototype.start = function() {\n    // Read in CSV timesheet\n    csv\n      .fromPath(inputFile, {\n        ignoreEmpty: true,\n        delimiter: ';'\n      })\n      // As data come in from the read stream\n      .on('data', (data) => {\n        this.input.push(data);\n      })\n      // In case something goes wrong during the read\n      .on('error', (err) => {\n        process.stdout.write(`\n          Oh no! Something went wrong while reading the file.\n\n          Please make sure you specify a CSV file that is semi-colon (;) separated.\n\n          Details: ${err}`);\n        process.exit(1);\n      })\n      // When the whole stream has been read\n      .on('end', () => {\n        process.stdout.write(`\n          ${this.input.length} rows successfully read.\n\n          Processing...\n\n          ============================================\n\n          `);\n        this.outputCSV(this.processCSV(this.input));\n      });\n  };\n\n  HappyTime.prototype.parseHours = function(string) {\n    return parseInt((string.replace(',', '.') * 100), 10);\n  };\n\n  HappyTime.prototype.stringHours = function(hours) {\n    return (hours / 100).toString().replace('.', ',');\n  };\n\n  HappyTime.prototype.roundHours = function(hours) {\n    let segments = hours.split(',');\n    let rounded = hours;\n\n    if (segments[1]) {\n      if (segments[1][0] >= 9 || (segments[1][0] >= 8 && (segments[1][1] >= 3 || false))) {\n        rounded = (segments[0] * 1) + 1;\n      } else if (segments[1][0] >= 7 || (segments[1][0] >= 6 && (segments[1][1] >= 3 || false))) {\n        rounded = [ segments[0], 75 ].join(',');\n      } else if (segments[1][0] >= 4 || (segments[1][0] >= 3 && (segments[1][1] >= 3 || false))) {\n        rounded = [ segments[0], 5 ].join(',');\n      } else if (segments[1][0] >= 2 || (segments[1][0] >= 1 && (segments[1][1] >= 3 || false))) {\n        rounded = [ segments[0], 25 ].join(',');\n      } else {\n        rounded = segments[0];\n      }\n    }\n    return rounded;\n  };\n\n  HappyTime.prototype.rowToGrid = function(rows) {\n    this.uniqueProjects = _.uniq(_.pluck(rows, 0), false);\n    this.uniqueDates = _.uniq(_.pluck(rows, 2), false);\n    let mappedDates = _.map(this.uniqueDates, (date) => moment(date, 'YYYY-MM-DD'));\n    let minDate = _.min(mappedDates).format('YYYY-MM-DD');\n    let maxDate = _.max(mappedDates).format('YYYY-MM-DD');\n\n    let range = [];\n    let startDate = minDate;\n\n    while (startDate <= maxDate) {\n      range.push(startDate);\n      startDate = moment(startDate, 'YYYY-MM-DD').add(1, 'd').format('YYYY-MM-DD');\n    }\n\n    let columnHeaders = range;\n    columnHeaders.unshift('Project', 'Task');\n\n    let output = [];\n\n    this.uniqueProjects.forEach((project) => {\n      let projectRows = _.filter(rows, (row) => row[0] === project);\n      this.uniqueProjectTasks = _.uniq(_.pluck(projectRows, 1), false);\n\n      this.uniqueProjectTasks.forEach(function(task) {\n        // Set all values to 0 so that empty cells can default to zero\n        let newRow = {};\n        columnHeaders.forEach((item) => {\n          newRow[item] = 0;\n        });\n\n        // Overwrite the Project and Task names\n        newRow.Project = project;\n        newRow.Task = task;\n        output.push(newRow);\n      });\n\n      // Sorted by date\n      let sortedRows = _.sortBy(projectRows, (row) => row[2]);\n\n      sortedRows.forEach(function(outer) {\n        output = _.map(output, (inner, innerCount) => {\n          if (inner.Project === outer[0] && inner.Task === outer[1]) {\n            inner[outer[2]] = outer[4];\n          }\n          return inner;\n        });\n      });\n    });\n\n    let newOutput = _.map(output, function(item) {\n      return _.values(item);\n    });\n\n    newOutput.unshift(columnHeaders);\n    return newOutput;\n  };\n\n  HappyTime.prototype.processCSV = function(input) {\n    try {\n      // Remove headers\n      this.inputHeaders = input.shift();\n\n      // Get consistent data structure\n      let output1 = _.map(input, (row, count) => {\n        let newRow = [];\n        newRow.push(row[0]);  // Project\n        newRow.push(row[1]);  // Task\n        newRow.push(moment(row[2], 'YYYY/MM/DD, h:mm A').format('YYYY-MM-DD'));   // Date\n        newRow.push(row[4]);  // Hours\n        return newRow;\n      }).sort();\n\n      let output2 = [];\n      let project = '';\n      let task = '';\n      let date = '';\n      let hours = 0;\n      let taskIndex = 0;\n      let sameProject = false;\n      let sameTask = false;\n      let sameDay = false;\n      let hasTemp = false;\n\n      // Summarize task times\n      output1.forEach((row, count) => {\n        sameProject = project === row[0] ? true : false;\n        sameTask = task === row[1] ? true : false;\n        sameDay = date === row[2] ? true : false;\n\n        if ((!sameProject || !sameTask || !sameDay) && hasTemp) {\n          output2[ taskIndex - 1 ] = [ project, task, date, this.stringHours(hours), this.roundHours(this.stringHours(hours)) ];\n        }\n\n        project = sameProject ? project : row[0];\n        task = sameTask ? task : row[1];\n        date = sameDay ? date : row[2];\n        hours = sameDay && sameTask ? hours + this.parseHours(row[3]) : this.parseHours(row[3]);\n        hasTemp = true;\n\n        if (!sameProject || !sameTask || !sameDay) {\n          output2[taskIndex] = [ project, task, date, this.stringHours(hours), this.roundHours(this.stringHours(hours)) ];\n          taskIndex = output2.length;\n          hasTemp = false;\n        } else if (output1.length === count + 1) {\n          output2.push([ project, task, date, this.stringHours(hours), this.roundHours(this.stringHours(hours)) ]);\n          hasTemp = false;\n        }\n      });\n\n      return this.rowToGrid(output2);\n    } catch (e) {\n      let msg = `\n      Bummer! Something went wrong while processing your CSV.\n\n      Data expected in format:\n      ======================================================================================================================\n      PROJECT      | TASK                                          | START                 | END                    | HOURS\n      Project 87   | Calculate likelihood of snail race winners    | 2015/09/03, 5:16 PM   | 2015/09/03, 5:39 PM    |  0,38\n      ======================================================================================================================\n\n      ${e}`;\n      process.stdout.write(msg);\n    }\n  };\n\n  HappyTime.prototype.outputCSV = function(output) {\n    csv\n      .write(output, { delimiter: ';' })\n      .pipe(ws)\n      .on('finish', () => {\n        process.stdout.write(`Yay! Your timesheet is now happy.\n\n          $ open \"${outputFile}\"\n\n        `);\n        process.exit();\n      })\n      .on('error', (err) => {\n        process.stdout.write(`So close! Something went wrong while writing your CSV. ${err}`);\n        process.exit(1);\n      });\n  };\n\n  let ht = new HappyTime();\n  ht.start();\n} else {\n  process.stdout.write(`Whoops. Please specify an input file.`);\n  process.exit(1);\n}\n"],"sourceRoot":"/source/"}