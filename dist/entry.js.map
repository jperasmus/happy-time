{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"entry.js","sourcesContent":["#!/usr/bin/env node\n'use strict';\n\nimport fs from 'fs';\nimport _ from 'lodash';\nimport moment from 'moment';\nimport csv from 'fast-csv';\nimport pjson from '../package.json';\n\nlet inputFile = process.argv[2] || false;\nlet outputFile = process.argv[3] || false;\n\nif (inputFile) {\n  if (inputFile === '-v' || inputFile === '-version' || inputFile === '--version') {\n    process.stdout.write(pjson.name + ' @ v' + pjson.version);\n    process.exit();\n  }\n\n  if (!outputFile) {\n    let tempArray = inputFile.split('.');\n    tempArray.splice(-1, 0, 'happy');\n    outputFile = tempArray.join('.');\n  }\n\n  let ws = fs.createWriteStream(outputFile);\n\n  // Constructor function\n  // TODO: Rewrite using ES6 classes, just for fun\n  let HappyTime = function() {\n    this.input = [];\n  };\n\n  HappyTime.prototype.start = function() {\n    let _this = this;\n    csv\n      .fromPath(inputFile, {\n        ignoreEmpty: true,\n        delimiter: ';'\n      })\n      .on('data', function(data) {\n        _this.input.push(data);\n      })\n      .on('error', function(err) {\n        process.stdout.write(`\n          Oh no! Something went wrong while reading the file.\n\n          Please make sure you specify a CSV file that is semi-colon (;) separated.\n\n          err`);\n        process.exit(1);\n      })\n      .on('end', function() {\n        process.stdout.write(`\n          ${_this.input.length} rows successfully read.\n          Processing...\n\n          ============================================\n\n          `);\n        _this.outputCSV(_this.processCSV(_this.input));\n      });\n  };\n\n  HappyTime.prototype.parseHours = function(string) {\n    return parseInt((string.replace(',', '.') * 100), 10);\n  };\n\n  HappyTime.prototype.stringHours = function(hours) {\n    return (hours / 100).toString().replace('.', ',');\n  };\n\n  HappyTime.prototype.roundHours = function(hours) {\n    let segments = hours.split(',');\n    let rounded = hours;\n\n    if (segments[1]) {\n      if (segments[1][0] >= 9 || (segments[1][0] >= 8 && (segments[1][1] >= 3 || false))) {\n        rounded = (segments[0] * 1) + 1;\n      } else if (segments[1][0] >= 7 || (segments[1][0] >= 6 && (segments[1][1] >= 3 || false))) {\n        rounded = [ segments[0], 75 ].join(',');\n      } else if (segments[1][0] >= 4 || (segments[1][0] >= 3 && (segments[1][1] >= 3 || false))) {\n        rounded = [ segments[0], 5 ].join(',');\n      } else if (segments[1][0] >= 2 || (segments[1][0] >= 1 && (segments[1][1] >= 3 || false))) {\n        rounded = [ segments[0], 25 ].join(',');\n      } else {\n        rounded = segments[0];\n      }\n    }\n    return rounded;\n  };\n\n  HappyTime.prototype.rowToGrid = function(rows) {\n    this.uniqueDates = _.uniq(_.pluck(rows, 1), false);\n    this.uniqueTasks = _.uniq(_.pluck(rows, 0), false);\n    let mappedDates = _.map(this.uniqueDates, function(date) {\n      return moment(date, 'YYYY-MM-DD');\n    });\n    let minDate = _.min(mappedDates).format('YYYY-MM-DD');\n    let maxDate = _.max(mappedDates).format('YYYY-MM-DD');\n\n    let range = [];\n    let startDate = minDate;\n\n    while (startDate <= maxDate) {\n      range.push(startDate);\n      startDate = moment(startDate, 'YYYY-MM-DD').add(1, 'd').format('YYYY-MM-DD');\n    }\n\n    let columnHeaders = range;\n    columnHeaders.unshift('Task');\n\n    let output = [];\n\n    this.uniqueTasks.forEach(function(task) {\n      let newRow = {};\n      columnHeaders.forEach(function(item) {\n        newRow[item] = 0;\n      });\n\n      newRow.Task = task;\n      output.push(newRow);\n    });\n\n    let sortedRows = _.sortBy(rows, function(row) {\n      return row[1];    // Sorted by date\n    });\n\n    sortedRows.forEach(function(outer) {\n      output = _.map(output, function(inner, innerCount) {\n        if (inner.Task === outer[0]) {\n          inner[outer[1]] = outer[3];\n        }\n        return inner;\n      });\n    });\n\n    let newOutput = _.map(output, function(item) {\n      return _.values(item);\n    });\n\n    newOutput.unshift(columnHeaders);\n    return newOutput;\n  };\n\n  HappyTime.prototype.processCSV = function(input) {\n    let _this = this;\n    try {\n      let headers = input.shift();  // eslint-disable-line\n      let output1 = _.map(input, (row, count) => {\n        let newRow = [];\n        newRow.push(row[1]);  // Task\n        newRow.push(moment(row[2], 'YYYY/MM/DD, h:mm A').format('YYYY-MM-DD'));   // Date\n        newRow.push(row[4]);  // Hours\n        return newRow;\n      }).sort();\n\n      let output2 = [];\n      let task = '';\n      let date = '';\n      let hours = 0;\n      let taskIndex = 0;\n      let sameTask = false;\n      let sameDay = false;\n      let hasTemp = false;\n\n      // Sum task times\n      output1.forEach((row, count) => {\n        sameTask = task === row[0] ? true : false;\n        sameDay = date === row[1] ? true : false;\n\n        if ((!sameTask || !sameDay) && hasTemp) {\n          output2[ taskIndex - 1 ] = [ task, date, _this.stringHours(hours), _this.roundHours(_this.stringHours(hours)) ];\n        }\n\n        task = sameTask ? task : row[0];\n        date = sameDay ? date : row[1];\n        hours = sameDay && sameTask ? hours + _this.parseHours(row[2]) : _this.parseHours(row[2]);\n        hasTemp = true;\n\n        if (!sameDay || !sameTask) {\n          output2[taskIndex] = [ task, date, _this.stringHours(hours), _this.roundHours(_this.stringHours(hours)) ];\n          taskIndex = output2.length;\n          hasTemp = false;\n        } else if (output1.length === count + 1) {\n          output2.push([ task, date, _this.stringHours(hours), _this.roundHours(_this.stringHours(hours)) ]);\n          hasTemp = false;\n        }\n      });\n\n      return _this.rowToGrid(output2);\n    } catch (e) {\n      let msg = `\n      Bummer! Something went wrong while processing your CSV.\n\n      Data expected in format:\n      ======================================================================================================================\n      PROJECT      | TASK                                          | START                 | END                    | HOURS\n      Project 87   | Calculate likelihood of snail race winners    | 2015/09/03, 5:16 PM   | 2015/09/03, 5:39 PM    |  0,38\n      ======================================================================================================================\n\n      ${e}`;\n      process.stdout.write(msg);\n    }\n  };\n\n  HappyTime.prototype.outputCSV = function(output) {\n    csv\n      .write(output, { delimiter: ';' })\n      .pipe(ws)\n      .on('finish', function() {\n        process.stdout.write(`Yay! Your timesheet is now happy.\n\n          $ open \"${outputFile}\"`);\n        process.exit();\n      })\n      .on('error', function(e) {\n        process.stdout.write(`So close! Something went wrong while writing your CSV. ${e}`);\n        process.exit(1);\n      });\n  };\n\n  let ht = new HappyTime();\n  ht.start();\n} else {\n  process.stdout.write(`Whoops. Please specify an input file.`);\n  process.exit(1);\n}\n"],"sourceRoot":"/source/"}